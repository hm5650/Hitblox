local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local localPlayer = Players.LocalPlayer

-- Function to play and destroy sounds
local function playSound(soundId)
    local sound = Instance.new("Sound")
    sound.SoundId = soundId
    sound.Parent = workspace
    sound:Play()
    sound.Ended:Connect(function()
        sound:Destroy()
    end)
end

-- Initial notification
StarterGui:SetCore("SendNotification", {
    Title = "Loading",
    Text = "Made by hmmm5650 ;)",
    Duration = 5
})
task.wait()

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICornerFrame = Instance.new("UICorner")
local UIStrokeFrame = Instance.new("UIStroke") -- Yellow outline for Frame
local LoadingLabel = Instance.new("TextLabel")
local EmojiLabel = Instance.new("TextLabel") -- Emoji label for üç™
local BlurEffect = Instance.new("BlurEffect") -- For background blur
local TweenService = game:GetService("TweenService")

ScreenGui.Name = "LoadingScreen"
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Add blur effect to the ScreenGui
BlurEffect.Parent = game.Lighting
BlurEffect.Size = 20 -- Adjust the blur level

-- Main loading screen frame
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.Size = UDim2.new(0.25, 0, 0.25, 0) -- Square shape
Frame.Position = UDim2.new(0.375, 0, 0.375, 0) -- Centered
Frame.Transparency = 0.5

UICornerFrame.Parent = Frame
UICornerFrame.CornerRadius = UDim.new(0.2, 0) -- Slightly rounded edges

-- Yellow outline for Frame
UIStrokeFrame.Parent = Frame
UIStrokeFrame.Thickness = 2
UIStrokeFrame.Color = Color3.fromRGB(255, 255, 0) -- Yellow color

-- Loading label
LoadingLabel.Name = "LoadingLabel"
LoadingLabel.Parent = Frame
LoadingLabel.BackgroundTransparency = 1
LoadingLabel.Size = UDim2.new(1, 0, 0.2, 0)
LoadingLabel.Position = UDim2.new(0, 0, 0.75, 0) -- Below the emoji
LoadingLabel.Font = Enum.Font.SourceSansBold
LoadingLabel.Text = "Loading Hitblox"
LoadingLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadingLabel.TextScaled = true

-- Emoji label (üç™) - Much larger size
EmojiLabel.Parent = Frame
EmojiLabel.BackgroundTransparency = 1
EmojiLabel.Size = UDim2.new(0.6, 0, 0.6, 0) -- Much larger size
EmojiLabel.Position = UDim2.new(0.2, 0, 0.1, 0) -- No change in position
EmojiLabel.Font = Enum.Font.SourceSans
EmojiLabel.Text = "üç™"
EmojiLabel.TextColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color
EmojiLabel.TextScaled = true

-- Smooth infinite rotation animation for the emoji
local rotationTween = TweenService:Create(
    EmojiLabel,
    TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1), -- Infinite rotation
    { Rotation = 360 }
)
rotationTween:Play()

-- Wait for 3 seconds before starting the fade-out
task.wait(3)

-- Fade out the loading screen frame
local fadeOutTween = TweenService:Create(
    Frame,
    TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut),
    { BackgroundTransparency = 1 }
)
fadeOutTween:Play()

-- Wait for the fade-out to finish, then remove the screen and blur effect
fadeOutTween.Completed:Connect(function()
    ScreenGui:Destroy()
    BlurEffect:Destroy() -- Remove blur effect
end)
task.wait(2)
-- Play initial sound
playSound("rbxassetid://5607311932")

-- Load UI library
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/Arceus-X-UI-Library/main/source.lua"))()
lib:SetTitle("Hitblox")
lib:SetIcon("http://www.roblox.com/asset/?id=9178187770")
lib:SetTheme("HighContrast")
-- Play another sound
playSound("rbxassetid://195868961")

-- Hitbox settings
local HitboxSize = 20
local HitboxTransparency = 0.89
local IsHitboxEnabled = false
local IsESPEnabled = false
local ESPTexts = {}

-- Function to check if a player is an enemy (exclude local player)
local function isEnemy(player)
    return player ~= localPlayer and (player.Team ~= localPlayer.Team or player.Team == nil)
end

-- Function to modify hitboxes without removing legs
local function modifyHitboxes(character)
    if not character then return end

    -- R6 characters use 'Head', 'Torso', etc.
    -- R15 characters use 'Head', 'HumanoidRootPart', 'UpperTorso', etc.

    -- Find the HumanoidRootPart (common for both R6 and R15)
    local hrp = character:FindFirstChild("HumanoidRootPart")

    -- If HumanoidRootPart exists, modify it
    if hrp then
        hrp.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
        hrp.Transparency = HitboxTransparency
        hrp.BrickColor = BrickColor.new("Dark red")
        hrp.Material = Enum.Material.Neon
        hrp.CanCollide = false
    end

    -- Find the Head
    local head = character:FindFirstChild("Head")

    -- If Head exists, modify it
    if head then
        head.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
        head.Transparency = HitboxTransparency
        head.BrickColor = BrickColor.new("Bright red")
        head.Material = Enum.Material.Neon
        head.CanCollide = false
        head.Massless = true
    end
end

-- Function to reset hitboxes
local function resetHitboxes(character)
    if not character then return end

    -- Reset HumanoidRootPart (common for both R6 and R15)
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if hrp then
        hrp.Size = Vector3.new(2, 2, 1)
        hrp.Transparency = 1
        hrp.BrickColor = BrickColor.new("Medium stone grey")
        hrp.Material = Enum.Material.Plastic
        hrp.CanCollide = true
    end

    -- Reset Head
    local head = character:FindFirstChild("Head")
    if head then
        head.Size = Vector3.new(2, 1, 1)
        head.Transparency = 1
        head.BrickColor = BrickColor.new("Medium stone grey")
        head.Material = Enum.Material.Plastic
        head.CanCollide = true
        head.Massless = false
    end
end

-- Function to make corpses fall through the ground
local function shrinkHitbox(character)
    if not character then return end

    for _, part in ipairs(character:GetDescendants()) do -- Use GetDescendants() to get all parts
        if part:IsA("BasePart") then
            part.Size = Vector3.new(1, 1, 1)  -- Shrink parts
            part.Transparency = 0.8  -- Make it more transparent
            part.BrickColor = BrickColor.new("Dark grey")
            part.Material = Enum.Material.SmoothPlastic
            part.CanCollide = false -- Make sure it falls through the ground
            part.Anchored = false -- Ensure it's not stuck
            part.Velocity = Vector3.new(0, -50, 0) -- Force it downward
        end
    end
end

-- Function to continuously apply hitboxes (only for enemies, not the local player)
local function applyHitboxes()
    for _, player in ipairs(Players:GetPlayers()) do
        if isEnemy(player) and player.Character then
            modifyHitboxes(player.Character) -- Apply hitbox only for enemy players
        end
    end
end

-- Function to reset hitboxes for all players
local function deleteHitboxes()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            resetHitboxes(player.Character) -- Reset hitboxes for all players
        end
    end
end

-- Flag to control the loop for expanding hitboxes
local isExpandingHitboxes = false
local hitboxExpansionCoroutine

-- Function to toggle repeated hitboxes with deletion
local function toggleRepeatHitboxes(state)
    IsHitboxEnabled = state
    playSound("rbxassetid://195868961")

    if IsHitboxEnabled then
        -- Apply hitboxes initially
        applyHitboxes()

        -- Start the loop for repeating hitbox expansion if not already running
        if not isExpandingHitboxes then
            isExpandingHitboxes = true
            hitboxExpansionCoroutine = coroutine.create(function()
                while isExpandingHitboxes do
                    task.wait(1)  -- Adjust the time interval here if needed
                    applyHitboxes()  -- Reapply hitboxes repeatedly
                end
            end)
            coroutine.resume(hitboxExpansionCoroutine)
        end
    else
        -- Stop the hitbox expansion loop
        if isExpandingHitboxes then
            isExpandingHitboxes = false
            if hitboxExpansionCoroutine then
                -- Ensure that the loop stops
                coroutine.close(hitboxExpansionCoroutine)
                hitboxExpansionCoroutine = nil
            end
        end

        -- Delete hitboxes when disabled
        deleteHitboxes()
    end
end

-- Optimized ESP System with Distance-Based Size
local function createESP(player)
    if ESPTexts[player] then
        ESPTexts[player]:Destroy()  -- Delete previous ESP to avoid duplicates
        ESPTexts[player] = nil
    end

    if not player.Character then return end

    -- Only apply ESP to enemies
    if isEnemy(player) then
        local head = player.Character:FindFirstChild("Head")
        local hrp = player.Character:FindFirstChild("HumanoidRootPart")

        local adorneePart = head or hrp  -- Use head if available, otherwise use HumanoidRootPart
        if not adorneePart then return end

        local billboard = Instance.new("BillboardGui")
        billboard.Name = "ESP"
        billboard.Adornee = adorneePart
        billboard.Size = UDim2.new(0, 100, 0, 50) -- Default size
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.AlwaysOnTop = true

        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 0, 0) -- Red Color for enemies
        textLabel.TextStrokeTransparency = 0
        textLabel.Text = player.Name
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSansBold

        ESPTexts[player] = billboard
        billboard.Parent = adorneePart

        -- Update ESP size based on distance (Optimized)
        local function updateESPSize()
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local distance = (localPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                local minSize = 10
                local maxSize = 100
                local sizeFactor = math.clamp(maxSize - distance * 0.5, minSize, maxSize)
                billboard.Size = UDim2.new(0, sizeFactor, 0, sizeFactor * 0.5)  -- Update ESP size dynamically
            end
        end

        -- Optimize by limiting updates
        local lastUpdateTime = tick()
        RunService.RenderStepped:Connect(function()
            if tick() - lastUpdateTime >= 0.1 then
                updateESPSize()
                lastUpdateTime = tick()
            end
        end)
    end
end

-- Function to toggle ESP (Only for enemies)
local function toggleESP(state)
    IsESPEnabled = state
    playSound("rbxassetid://195868961")

    if IsESPEnabled then
        -- Apply ESP to all players
        for _, player in ipairs(Players:GetPlayers()) do
            if isEnemy(player) then
                createESP(player)
            end
        end
    else
        -- Delete all ESP elements
        for _, gui in pairs(ESPTexts) do
            gui:Destroy()
        end
        ESPTexts = {}
    end
end

-- Handle Player and Apply Shrink Effect on Death
local function handlePlayer(player)
    if isEnemy(player) then
        player.CharacterAdded:Connect(function(character)
            task.wait(1)  -- Wait for the character to fully load
            -- Reset hitboxes when the player respawns
            if IsESPEnabled then
                createESP(player)
            end
            if IsHitboxEnabled then
                resetHitboxes(character) -- Reset hitbox size immediately upon respawn
            end
        end)

        player.CharacterRemoving:Connect(function()
            -- Shrink hitboxes when the player dies
            if player.Character then
                shrinkHitbox(player.Character)  -- Shrink hitbox upon death
            end
        end)

        if player.Character and IsESPEnabled then
            createESP(player)  -- Create ESP if the player is already in-game
        end
    end
end

-- Apply to players already in the game
for _, player in ipairs(Players:GetPlayers()) do
    handlePlayer(player)
end

-- Connect to player added and removed events
Players.PlayerAdded:Connect(handlePlayer)
Players.PlayerRemoving:Connect(function(player)
    if ESPTexts[player] then
        ESPTexts[player]:Destroy()  -- Delete ESP when player leaves
        ESPTexts[player] = nil
    end
end)

-- UI Elements
lib:AddButton("FBright", function()
    playSound("rbxassetid://6228337171")
    -- Full Bright Script

local Lighting = game:GetService("Lighting")

-- Set the properties for full brightness
Lighting.Brightness = 2
Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
Lighting.Ambient = Color3.fromRGB(255, 255, 255)
Lighting.TimeOfDay = "14:00:00" -- midday for full brightness
Lighting.FogStart = 0
Lighting.FogEnd = 100000
Lighting.FogColor = Color3.fromRGB(255, 255, 255)

-- Optionally, you can loop this to maintain full brightness even after events or resets
game:GetService("RunService").Heartbeat:Connect(function()
    Lighting.Brightness = 2
    Lighting.OutdoorAmbient = Color3.fromRGB(255, 255, 255)
    Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    Lighting.TimeOfDay = "14:00:00"
    Lighting.FogStart = 0
    Lighting.FogEnd = 100000
    Lighting.FogColor = Color3.fromRGB(255, 255, 255)
end)

end)

lib:AddButton("AntiLag", function()
    playSound("rbxassetid://6228337171")
    local function removeVisualEffects()
    for _, obj in pairs(workspace:GetDescendants()) do
        -- Remove Decals (except from player characters)
        if obj:IsA("Decal") and not obj:IsDescendantOf(game.Players) then
            obj:Destroy()
        end
        -- Remove MeshParts that are NOT inside characters
        if obj:IsA("MeshPart") and not obj:IsDescendantOf(game.Players) then
            obj:Destroy()
        end
        -- Remove SurfaceGui (Optional)
        if obj:IsA("SurfaceGui") then
            obj:Destroy()
        end
    end
end
task.wait()
for i,v in next, (workspace:GetDescendants()) do
 if v:IsA("Part") then v.Material = Enum.Material.SmoothPlastic
 end
 end

end)

lib:AddToggle("Fov", function(state)
    if state then
        playSound("rbxassetid://195868961")
        local camera = game.Workspace.CurrentCamera

-- Set the camera's FOV to 120
camera.FieldOfView = 120

    else
       playSound("rbxassetid://195868961")
     local camera = game.Workspace.CurrentCamera

-- Set the camera's FOV to 120
camera.FieldOfView = 79
    end
end, false)

lib:AddToggle("Expand Hitbox", function(state)
    toggleRepeatHitboxes(state)  -- Toggle repeated hitboxes
end, false)

lib:AddToggle("ESP", function(state)
    toggleESP(state)  -- Toggle ESP for enemies
end, false)

lib:AddButton("Aimlock", function()
    playSound("rbxassetid://6228337171")
loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Aimbot-Universal-For-Mobile-and-PC-29153"))()
end)

lib:AddButton("BlatantCC", function()
    playSound("rbxassetid://6228337171")
loadstring(game:HttpGet("https://raw.githubusercontent.com/vxyo/RevNigga/refs/heads/main/FreeForeverBlatantCC"))()
end)

lib:AddButton("üç™", function()
playSound("rbxassetid://7115235855")
StarterGui:SetCore("SendNotification", {
Title = "$10",
Text = "üç™ yuymyy",
Duration = 3
})
end)

-- Show the UI
lib:Show()
